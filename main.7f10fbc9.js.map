{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","firstReceivedUl","document","querySelector","firstThreeReceivedUl","allSuccesfulUl","getThreeFastestDetails","phoneIds","promises","map","phoneId","request","Promise","any","p","i","then","v","phone","index","renderPhone","splice","phone2","index2","phone3","ul","li","createElement","h3","innerText","name","appendChild","getFirstReceivedDetails","getAllSuccessfulDetails","forEach","push","all","phones","url","fetch","response","ok","headers","get","includes","json","reject","Error","status","statusText","getPhones","idArr","id","catch","error"],"mappings":"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","file":"main.7f10fbc9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst firstReceivedUl = document.querySelector('.first-received-ul');\nconst firstThreeReceivedUl = document.querySelector('.first-three-received-ul');\nconst allSuccesfulUl = document.querySelector('.all-successful-ul');\n\ngetPhones(`${BASE_URL}.json`)\n  .then(phones => {\n    const idArr = phones.map(phone => phone.id);\n\n    getFirstReceivedDetails(idArr);\n    getAllSuccessfulDetails(idArr);\n    getThreeFastestDetails(idArr);\n  })\n  .catch(error => new Error(error));\n\nfunction getThreeFastestDetails(phoneIds) {\n  const promises = phoneIds.map(phoneId => {\n    return request(`${BASE_URL}/${phoneId}.json`);\n  });\n\n  Promise.any(promises.map((p, i) => p.then(v => [v, i])))\n    .then(([phone, index]) => {\n      renderPhone(phone, firstThreeReceivedUl);\n      promises.splice(index, 1);\n\n      Promise.any(promises.map((p, i) => p.then(v => [v, i])))\n        .then(([phone2, index2]) => {\n          renderPhone(phone2, firstThreeReceivedUl);\n          promises.splice(index2, 1);\n\n          Promise.any(promises.map((p, i) => p.then(v => [v, i])))\n            .then(([phone3, index3]) => {\n              renderPhone(phone3, firstThreeReceivedUl);\n            });\n        });\n    });\n}\n\nfunction renderPhone(phone, ul) {\n  const li = document.createElement('li');\n  const h3 = document.createElement('h3');\n\n  h3.innerText = phone.name;\n  li.appendChild(h3);\n  ul.appendChild(li);\n}\n\nfunction getFirstReceivedDetails(phoneIds) {\n  const promises = phoneIds.map(phoneId => {\n    return request(`${BASE_URL}/${phoneId}.json`);\n  });\n\n  Promise.any(promises)\n    .then(phone => {\n      renderPhone(phone, firstReceivedUl);\n    });\n}\n\nfunction getAllSuccessfulDetails(phoneIds) {\n  const promises = [];\n\n  phoneIds.forEach(phoneId => {\n    promises.push(request(`${BASE_URL}/${phoneId}.json`));\n  });\n\n  Promise.all(promises)\n    .then(phones => {\n      phones.forEach(phone => {\n        renderPhone(phone, allSuccesfulUl);\n      });\n    });\n}\n\nfunction request(url) {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          Error(`Error: ${response.status} - ${response.statusText}`)\n        );\n      }\n\n      if (!response.headers.get('content-type').includes('application/json')) {\n        return Promise.reject(\n          Error('Error: Content type is not supported!')\n        );\n      }\n\n      return response.json();\n    });\n}\n\nfunction getPhones(url) {\n  return request(url);\n}\n"]}